- name: Ensure etcd cert dir
  file:
    path: "{{ etcd_cert_dir }}"
    state: directory

- name: Create hard links for files that are present
  file:
    src: "{{ etcd_cert_dir}}/{{ item.src }}"
    dest: "{{ etcd_cert_dir }}/{{ item.dest }}"
    state: hard
  with_items:
    - { src: ca.crt, dest: ca.pem }
    - { src: ca.key, dest: ca-key.pem }
    - { src: etcdctl-etcd-client.crt, dest: "admin-{{ inventory_hostname }}.pem" }
    - { src: etcdctl-etcd-client.key, dest: "admin-{{ inventory_hostname }}-key.pem" }
    - { src: etcdctl-etcd-client.crt, dest: "node-{{ inventory_hostname }}.pem" }
    - { src: etcdctl-etcd-client.key, dest: "node-{{ inventory_hostname }}-key.pem" }
  failed_when: false

- name: "Gen_certs | Get etcd certificate serials"
  command: "openssl x509 -in {{ etcd_cert_dir }}/node-{{ inventory_hostname }}.pem -noout -serial"
  register: "etcd_client_cert_serial_result"
  changed_when: false
  when:
    - inventory_hostname in groups['k8s-cluster']|union(groups['calico-rr']|default([]))|unique|sort
  tags:
    - master
    - network

- name: Set etcd_client_cert_serial
  set_fact:
    etcd_client_cert_serial: "{{ etcd_client_cert_serial_result.stdout.split('=')[1] }}"
  when:
    - inventory_hostname in groups['k8s-cluster']|union(groups['calico-rr']|default([]))|unique|sort
  tags:
    - master
    - network
