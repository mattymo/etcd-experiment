- include_tasks: etcdadm_install.yml

- name: Check if already set up
  stat:
    path: "{{ etcd_cert_dir }}/server.key"
  register: etcd_cert_exists

- name: Install certs
  copy:
    content: "{{ item.content | b64decode }}"
    dest: "{{ item.dest }}"
    owner: root
    group: root
    mode: "{{ item.mode }}"
  with_items:
    - { dest: "{{ etcd_cert_dir }}/ca.crt", content: "{{ etcd_ca_cert|default('') }}", mode: "0644" }
    - { dest: "{{ etcd_cert_dir }}/ca.key", content: "{{ etcd_ca_key|default('') }}", mode: "0600" }
  when:
    - not etcd_cert_exists.stat.exists
    - item.content != ""

- name: Run etcdadm init
  command: >-
    {{ bin_dir }}/etcdadm init
    --certs-dir {{ etcd_cert_dir }}
    --install-dir {{ bin_dir }}
    --version {{ etcd_version | replace('v', '') }}
  when: not etcd_cert_exists.stat.exists

- name: Ensure etcd is running
  service:
    name: etcd
    state: started
    enabled: yes

- name: Fetch etcd certs
  include_tasks: slurp_cert.yml
  loop_control:
    loop_var: cert
  with_items:
    - { result_var: etcd_ca_cert_result, file: "{{ etcd_cert_dir }}/ca.crt" }
    - { result_var: etcd_ca_key_result, file: "{{ etcd_cert_dir }}/ca.key" }
    - { result_var: etcdctl_client_cert_result, file: "{{ etcd_cert_dir }}/etcdctl-etcd-client.crt" }
    - { result_var: etcdctl_client_key_result, file: "{{ etcd_cert_dir }}/etcdctl-etcd-client.key" }

- name: Set facts with cert contents (in base64 encoding)
  set_fact:
    etcd_ca_cert: "{{ etcd_ca_cert_result['content'] }}"
    etcd_ca_key: "{{ etcd_ca_key_result['content'] }}"
    etcdctl_client_cert: "{{ etcdctl_client_cert_result['content'] }}"
    etcdctl_client_key: "{{ etcdctl_client_key_result['content'] }}"

- name: Write certs to /root/etcd_certs.yml
  copy:
    content: |
      ---
      etcd_ca_cert: "{{ etcd_ca_cert }}"
      etcd_ca_key: "{{ etcd_ca_key }}"
      etcdctl_client_cert: "{{ etcdctl_client_cert }}"
      etcdctl_client_key: "{{ etcdctl_client_key }}"
    dest: /root/etcd_certs.yml
